{"home":{"title":"saber2pr","logo":"https://github.com/Saber2pr/MyWeb/raw/master/resource/saber2pr.jpg","author":"I am saber2pr","readME":"the webpage is based on React","websites":[{"name":"github","href":"https://github.com/Saber2pr"},{"name":"csdn","href":"https://blog.csdn.net/u011607490"},{"name":"bilibili","href":"https://space.bilibili.com/71959910/#/"},{"name":"zhihu","href":"https://www.zhihu.com/people/li-li-23-53-81/activities"}]},"blog":{"items":[{"name":"架构","type":"本项目","content":"本项目采用了Observable(观察者)模式来架构：\n1. main.tsx\n```ts\nStore$.subscribe(state =>\n  ReactDOM.render(\n    <Application state={state} />,\n    document.querySelector('body')\n  )\n)\n```\nStore$是一个可观测对象(Observable)，当Store$中所记录的状态(state)发生变化时会将新的状态推送(dispatch)至Observers。\n状态的改变将由组成Application的子组件发起。\n例如：\nblog_tab.tsx\n```ts\nconst out = index =>\n  Store$.pipe(\n    blog_tab_index(index),\n    blog_content_state('out')\n  )\n\nexport const TabContent = ({ state, style }: Tabs) => {\n  const { items, tabCur } = state\n  const tabs = Array.from(new Set(items.map(v => v.type))).map((t, index) => (\n    <Tab name={t} key={index}>\n      <Content\n        state={{\n          ...state,\n          items: find(items, v => v.type === t)\n        }}\n        style={style}\n        key={index}\n      />\n    </Tab>\n  ))\n  return (\n    <TabV\n      col={'25% 75%'}\n      active={tabVcss.active}\n      unactive={tabVcss.unactive}\n      current={tabCur}\n      onClick={out}\n    >\n      {tabs}\n    </TabV>\n  )\n}\n```\n用户点击tab后会调用out函数。out函数在Store$管道(pipe)中使用操作符(operation)对state进行了处理，这个行为会被observers所感知。例如上面的mian文件中，该observer在收到新的状态后会将其送入ReactDOM.render中，由React的diff算法进行高效的更新dom内容。"},{"name":"插入代码块","type":"功能测试","content":"先导入react\n```ts\nimport React, { Props, CSSProperties } from 'react'\nimport { Style } from './type'\n```\n\n定义接口：\n```ts\nexport interface CodeText extends Props<any> {\n  content: string\n  style: Style<'p' | 'pre'>\n  start?: string\n  end?: string\n}\n```\n\n实现接口\n```ts\nexport const CodeText = ({ content, style, start, end }: CodeText) => {\n  const { p, pre } = style\n  const _start = start || '\\`\\`\\`ts'\n  const _end = end || '\\`\\`\\`'\n  const commonstyle: CSSProperties = {\n    textAlign: 'left'\n  }\n  const pstyle: CSSProperties = {\n    ...commonstyle,\n    ...p\n  }\n  const prestyle: CSSProperties = {\n    ...commonstyle,\n    ...pre\n  }\n  return (\n    <>\n      {content.split(_start).map(c => {\n        if (c.includes(_end)) {\n          const result = c.split(_end)\n          return (\n            <>\n              <pre style={prestyle}>{result[0]}</pre>\n              <p style={pstyle}>{result[1]}</p>\n            </>\n          )\n        } else {\n          return <p style={pstyle}>{c}</p>\n        }\n      })}\n    </>\n  )\n}\n```"}],"tabCur":0,"contentCur":0,"blogState":"view","contentState":"enter"},"project":[{"name":"2048","href":"https://saber2pr.github.io/MyWeb/build/2048/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/2048.jpg","infor":"a webgame."},{"name":"EdgeJudge","href":"https://saber2pr.github.io/MyWeb/build/EdgeJudge/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/edgejudge.jpg","infor":"a Collision test."},{"name":"ccc-bullet","href":"https://saber2pr.github.io/MyWeb/build/ccc-bullet/build/web-mobile/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/ccc-bullet.jpg","infor":"a shootGame demo."},{"name":"colliBar","href":"https://saber2pr.github.io/MyWeb/build/collisionBar/build/web-mobile/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/colliBar.jpg","infor":"a PhysCollision test"},{"name":"HouseBlocks","href":"https://saber2pr.github.io/HouseBlocks/HouseBlocks_CocosCreator/build/web-mobile0.1/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/newHouseBlocks.jpg","infor":"a webgame."},{"name":"csvTochat","href":"https://saber2pr.github.io/csvToChart/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/csvToChartView.jpg","infor":"a webTool for excel."},{"name":"CameraIdea","href":"https://saber2pr.github.io/CocosCreatorExam/CameraIdea/build/web-mobile/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/camera.gif","infor":"a cocoscreator demo."},{"name":"RandPlat","href":"https://saber2pr.github.io/CocosCreatorExam/RandPlat/build/web-mobile/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/RandPlat.jpg","infor":"a rand-gift test."},{"name":"ComputerBattle","href":"https://saber2pr.github.io/ComputerBattle/build/web-mobile/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/CompView.gif","infor":"a webgame."},{"name":"imageToCode","href":"https://github.com/Saber2pr/openCvImageTransformer","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/badapple.jpg","infor":"an opencv-demo."},{"name":"XmJUMP","href":"https://github.com/Saber2pr/XM_JUMP","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/XM_JUMP.jpg","infor":"cocos2dx demo."},{"name":"2DJumpPlatForm","href":"https://saber2pr.github.io/MyWeb/build/PhysAct/build/web-mobile/","src":"https://github.com/Saber2pr/MyWeb/raw/master/resource/2DJumpPlatForm.png","infor":"a webgame."}],"about":{"title":"说明","content":"这是一个用来组织和导航saber2pr/Repositories的页面，由json数据渲染而成。使用react（16.8.2）编写，配色风格参考Dracula Official。语言为React-Typescript（tsx），层叠样式表为css in js，栅格布局为grid格式。采用函数组件，状态更新使用React-Hooks，状态管理使用Observable订阅观察。tab导航原理为props.children动态渲染，a标签hover原理为onMouseOver & onMouseOut动态切换css阴影，input搜索原理为正则match & children动态渲染，列表折叠原理为数组slice & children动态渲染，代码插入利用pre标签和scroll样式(overflow:hidden)。使用json接口，json对象序列化并post到server端持久化，server端使用nodejs-http模块搭建。前端页面默认使用样例假数据。 项目的单元工具（utils）已经同步到npm。","more":"更多信息请移步github.com/Saber2pr/saber2pr。","contact":"联系","links":[{"name":"saber2pr@gmail.com","href":"https://saber2pr@gmail.com"},{"name":"1029985799@qq.com","href":"https://1029985799@qq.com"}]},"common":{"footer":"github.com/Saber2pr","tabCur":1}}